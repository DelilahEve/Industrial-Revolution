plugins {
    id 'fabric-loom'
    id 'maven-publish'
    id 'org.jetbrains.kotlin.jvm'
}

archivesBaseName = project.archives_base_name

dependencies {
    api project(path: ":Base", configuration: "namedElements")
    include project(path: ":Base", configuration: "namedElements")
    api project(path: ":Transportation", configuration: "namedElements")
    include project(path: ":Transportation", configuration: "namedElements")
    api project(path: ":API", configuration: "namedElements")
    include project(path: ":API", configuration: "namedElements")
}

allprojects {
    apply plugin: 'fabric-loom'
    apply plugin: 'org.jetbrains.kotlin.jvm'

    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17

    version = project.mod_version
    group = project.maven_group

    repositories {
    }

    dependencies {
        minecraft "com.mojang:minecraft:${project.minecraft_version}"
        mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
        modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

        modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

        modImplementation "net.fabricmc:fabric-language-kotlin:${project.fabric_kotlin_version}"

        include modApi("teamreborn:energy:${project.reborn_energy}") {
            exclude(group: "net.fabricmc.fabric-api")
        }
    }

    processResources {
        inputs.property "version", project.version

        filesMatching("fabric.mod.json") {
            expand "version": project.version
        }
    }

    tasks.withType(JavaCompile) {
        it.options.encoding = "UTF-8"
        it.options.release = 17
    }

    java {
        withSourcesJar()
    }

    jar {
        from ("LICENSE") {
            rename { "${it}_${project.archivesBaseName}"}
        }
    }

// configure the maven publication
    publishing {
        publications {
            mavenJava(MavenPublication) {
                // add all the jars that should be included when publishing to maven
                artifact(remapJar) {
                    builtBy remapJar
                }
                artifact(sourcesJar) {
                    builtBy remapSourcesJar
                }
            }
        }

        // select the repositories you want to publish to
        repositories {
            // uncomment to publish to the local maven
            // mavenLocal()
        }
    }

    compileKotlin.kotlinOptions.jvmTarget = "17"

}